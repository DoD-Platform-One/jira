# Big Bang Additions
proxyName: jira.dev.bigbang.mil
domain: dev.bigbang.mil

# Used only for creation of SSO Istio ServiceEntry. For more information on SSO configuration please see docs/keycloak.md
sso:
  enabled: false
  host: login.dso.mil

istio:
  enabled: false
  jira:
    # -- Toggle Istio VirtualService creation
    enabled: true
    # -- Set Annotations for VirtualService
    annotations: {}
    # -- Set Labels for VirtualService
    labels: {}
    # -- Set Gateway for VirtualService
    gateways:
      - istio-system/public
    # -- Set Hosts for VirtualService
    hosts:
      - jira.{{ .Values.domain }}

  hardened:
    enabled: false
    outboundTrafficPolicyMode: "REGISTRY_ONLY"
    customServiceEntries: []

bbtests:
  enabled: false
  cypress:
    artifacts: true
    envs:
      cypress_url: 'http://{{ include "common.names.fullname" . }}:{{ .Values.jira.service.port
        }}'
    resources:
      requests:
        cpu: "1"
        memory: "2Gi"
      limits:
        cpu: "1"
        memory: "2Gi"

# If networkPolicies are enabled, you will need to pass the controlPlaneCidr as that is required by the egress-kube-api policy.
networkPolicies:
  enabled: false
  ingressLabels:
    app: istio-ingressgateway
    istio: ingressgateway
  controlPlaneCidr: "0.0.0.0/0"

  # Additional network policies
  # ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
  additionalPolicies: []

helmTestImage: "registry1.dso.mil/ironbank/big-bang/base:2.1.0"
# values to enable HPA in Jira cluster
# Setup after your intial setup of Jira cluster and when cluster autoscaling is enabled.
hpa:
  enabled: false
  maxReplicas: 3
  cpu: 80
  memory: 70

upstream:
  nameOverride: "jira"

  image:
    repository: registry1.dso.mil/ironbank/atlassian/jira-data-center/jira-node-lts

    imagePullSecrets:
      - name: private-registry
    pullPolicy: IfNotPresent

    tag: "10.3.10"

  serviceAccount:
    create: true

    name:
    imagePullSecrets:
      - name: private-registry
    annotations: {}
    eksIrsa:
      roleArn:
  database:
    user:
    password:
  volumes:
    sharedHome:
      efs:
        enabled: false
        driver:
        efsid:

        persistentVolumeClaim:
          create: false
          accessModes:
            - ReadWriteMany      
          storageClassName:       
          resources:
            requests:
              storage: 1Gi
      nfs:
        enabled: false
        server: IP
        path: /

        persistentVolumeClaim:
          create: false
          accessModes:
            - ReadWriteMany
          storageClassName:
          resources:
            requests:
              storage: 1Gi
      nfsPermissionFixer: 
        imageRepo: registry1.dso.mil/ironbank/redhat/ubi/ubi8-minimal
        imageTag: "8.10"
    additional:
      - name: server-xml-j2
        configMap:
          name: server-xml-j2
          defaultMode: 484
      - name: server-xml
        configMap:
          name: server-xml
          defaultMode: 484
      - name: footer-vm
        configMap:
          name: footer-vm
          defaultMode: 484
  jira:
    containerSecurityContext:
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      runAsUser: 2001
      runAsGroup: 2001
    readinessProbe:
      custom: {}
    startupProbe:
      enabled: true
    livenessProbe:
      initialDelaySeconds: 300
    additionalJvmArgs:
      - -Dcom.redhat.fips=false

    additionalVolumeMounts:
      - mountPath: /opt/atlassian/etc/server.xml.j2
        name: server-xml-j2
        subPath: server.xml.j2
      - mountPath: /opt/atlassian/jira/conf/server.xml
        name: server-xml
        subPath: server.xml
      - mountPath: 
          /opt/atlassian/jira/atlassian-jira/WEB-INF/classes/templates/plugins/footer/footer.vm
        name: footer-vm
        subPath: footer.vm
  monitoring:
    jmxExporterInitContainer:
      runAsRoot: false
      customSecurityContext:
        runAsUser: 1000
    jmxExporterImageRepo: 
      registry1.dso.mil/ironbank/opensource/prometheus/jmx-exporter
    jmxExporterCustomJarLocation: 
      /var/atlassian/application-data/shared-home/jmx_prometheus_javaagent-0.18.0.jar
    grafana:
      dashboardLabels:
        grafana_dashboard: "1"
  fluentd:
    imageRepo: ironbank/opensource/fluentd/fluentd-kubernetes-daemonset
    imageTag: 1.19.0

  testPods:
    resources: {}
    labels: {}
    annotations: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}
    schedulerName:
    image:
      permissionsTestContainer: "registry1.dso.mil/ironbank/redhat/ubi/ubi8-minimal:8.10"
      statusTestContainer: "registry1.dso.mil/ironbank/opensource/alpinelinux/alpine:3.20" 