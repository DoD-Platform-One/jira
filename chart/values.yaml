# -- The initial number of pods that should be started at deployment of Jira.
# Note that because Jira requires initial manual configuration after the first pod is deployed, and before scaling
# up to additional pods, this should always be kept as 1.
replicaCount: 1

image:
  repository: registry.dso.mil/platform-one/big-bang/apps/third-party/jira/jira-ib
  # -- Optional image repository pull secret
  imagePullSecrets: []
  pullPolicy: IfNotPresent
  # -- The docker image tag to be used. Defaults to the Chart appVersion.
  tag: "8.13.4-rebase"

serviceAccount:
  # -- Specifies the name of the ServiceAccount to be used by the pods.
  # If not specified, but the the "serviceAccount.create" flag is set, then the ServiceAccount name will be auto-generated,
  # otherwise the 'default' ServiceAccount will be used.
  name:
  # -- true if a ServiceAccount should be created, or false if it already exists
  create: true
  # -- The list of image pull secrets that should be added to the created ServiceAccount
  imagePullSecrets: []

database:
  # -- The type of database being used.
  # Valid values include 'postgres72', 'mysql57', 'mysql8', 'oracle10g', 'mssql', 'postgresaurora96'
  # If not specified, then it will need to be provided via browser during initial startup.
  type:
  # -- The JDBC URL of the database to be used by Jira, e.g. jdbc:postgresql://host:port/database
  # If not specified, then it will need to be provided via browser during initial startup.
  url:
  # -- Username associated with the database being used.
  user: 
  # -- Password associated with the database being used.
  password: 
  # -- The Java class name of the JDBC driver to be used, e.g. org.postgresql.Driver
  # If not specified, then it will need to be provided via browser during initial startup.
  driver: org.postgresql.Driver
  credentials:
    # -- The name of the Kubernetes Secret that contains the database login credentials.
    # If specified, then the credentials will be automatically populated during Jira setup.
    # Otherwise, they will need to be provided via the browser after initial startup.
    secretName: 
    # -- The key in the Secret used to store the database login username
    usernameSecretKey: 
    # -- The key in the Secret used to store the database login password
    passwordSecretKey:

jira:
  service:
    # -- The port on which the Jira Kubernetes service will listen
    port: 80
    # -- The type of Kubernetes service to use for Jira
    type: ClusterIP
  # -- The GID used by the Jira docker image
  gid: "2001"

  ports:
    # -- The port on which the Jira container listens for HTTP traffic
    http: 8080
  readinessProbe:
    # -- The initial delay (in seconds) for the Jira container readiness probe, after which the probe will start running
    initialDelaySeconds: 10
    # -- How often (in seconds) the Jira container readiness robe will run
    periodSeconds: 5
    # -- The number of consecutive failures of the Jira container readiness probe before the pod fails readiness checks
    failureThreshold: 30

  clustering:
    # -- Set to true if Data Center clustering should be enabled
    # This will automatically configure cluster peer discovery between cluster nodes.
    enabled: false

  resources:
    jvm:
      # -- The maximum amount of heap memory that will be used by the Jira JVM
      maxHeap: "1g"
      # -- The minimum amount of heap memory that will be used by the Jira JVM
      minHeap: "1g"
      # -- The memory reserved for the Jira JVM code cache
      reservedCodeCache: "512m"
    # -- Specifies the standard Kubernetes resource requests and/or limits for the Jira container.
    # It is important that if the memory resources are specified here, they must allow for the size of the Jira JVM.
    # That means the maximum heap size, the reserved code cache size, plus other JVM overheads, must be accommodated.
    # Allowing for (maxHeap+codeCache)*1.5 would be an example.
    container: {}
    #  limits:
    #    cpu: "4"
    #    memory: "2G"
    #  requests:
    #    cpu: "4"
    #    memory: "2G"

  # -- Specifies a list of additional arguments that can be passed to the Jira JVM, e.g. system properties
  additionalJvmArgs:
  #    - -Dfoo=bar
  #    - -Dfruit=lemon

  # -- Specifies a list of additional Java libraries that should be added to the Jira container.
  # Each item in the list should specify the name of the volume which contain the library, as well as the name of the
  # library file within that volume's root directory. Optionally, a subDirectory field can be included to specify which
  # directory in the volume contains the library file.
  additionalLibraries: []
  #  - volumeName:
  #    subDirectory:
  #    fileName:

  # -- Specifies a list of additional Jira plugins that should be added to the Jira container.
  # These are specified in the same manner as the additionalLibraries field, but the files will be loaded
  # as bundled plugins rather than as libraries.
  additionalBundledPlugins: []
  #  - volumeName:
  #    subDirectory:
  #    fileName:

  # -- Defines any additional volumes mounts for the Jira container.
  # These can refer to existing volumes, or new volumes can be defined in volumes.additional.
  additionalVolumeMounts: 
    - mountPath: /opt/atlassian/etc/server.xml.j2
      name: server-xml-j2
      subPath: server.xml.j2
    - mountPath: /opt/atlassian/jira/conf/server.xml
      name: server-xml
      subPath: server.xml


  # -- Defines any additional environment variables to be passed to the Jira container.
  # See https://hub.docker.com/r/atlassian/jira-software for supported variables.
  additionalEnvironmentVariables: []

ingress:
  # -- True if an Ingress should be created.
  create: false
  # -- True if the created Ingress is to use the Kubernetes ingress-nginx controller.
  # This will populate the Ingress with annotations for that controller.
  # Set to false if a different controller is to be used, in which case the annotations need to be specified.
  nginx: true
  # -- The fully-qualified hostname of the Ingress.
  host:
  # -- The custom annotations that should be applied to the Ingress.
  annotations: {}
  # -- True if the browser communicates with the application over HTTPS.
  https: true
  # -- Secret that contains a TLS private key and certificate.
  # Optional if Ingress Controller is configured to use one secret for all ingresses
  tlsSecretName:

# -- Specify custom annotations to be added to all Jira pods
podAnnotations: {}
#  "name": "value"

volumes:
  localHome:
    persistentVolumeClaim:
      # -- If true, then a PersistentVolumeClaim will be created for each local-home volume.
      create: false
      # -- Specifies the name of the storage class that should be used for the local-home volume claim.
      storageClassName:
      # -- Specifies the standard Kubernetes resource requests and/or limits for the local-home volume claims.
      resources:
        requests:
          storage: 1Gi
    # -- When persistentVolumeClaim.create is false, then this value can be used to define a standard Kubernetes
    # volume which will be used for the local-home volumes. If not defined, then defaults to an emptyDir volume.
    customVolume: {}
    # -- Specifies the path in the Jira container to which the local-home volume will be mounted.
    mountPath: "/var/atlassian/application-data/jira"
  sharedHome:
    persistentVolumeClaim:
      # -- If true, then a PersistentVolumeClaim will be created for the shared-home volume.
      create: false
      # -- Specifies the name of the storage class that should be used for the shared-home volume claim.
      storageClassName:
      # -- Specifies the standard Kubernetes resource requests and/or limits for the shared-home volume claims.
      resources:
        requests:
          storage: 1Gi
    # -- If AWS efs is utilized, please ensure efs to set 'efs' to 'true' and provide the aws efs-id volume to create pv
    efs: false
    efsid:
    driver: efs.csi.aws.com
    # -- When persistentVolumeClaim.create is false, then this value can be used to define a standard Kubernetes
    # volume which will be used for the shared-home volume. If not defined, then defaults to an emptyDir (i.e. unshared) volume.
    customVolume: {}
    # -- Specifies the path in the Jira container to which the shared-home volume will be mounted.
    mountPath: "/var/atlassian/application-data/shared-home"
    # -- Specifies the sub-directory of the shared-home volume which will be mounted in to the Jira container.
    subPath:
    nfsPermissionFixer:
      # -- If enabled, this will alter the shared-home volume's root directory so that Jira can write to it.
      # This is a workaround for a Kubernetes bug affecting NFS volumes: https://github.com/kubernetes/examples/issues/260
      enabled: false
      # -- The path in the initContainer where the shared-home volume will be mounted
      mountPath: /shared-home
      # -- By default, the fixer will change the group ownership of the volume's root directory to match the Jira
      # container's GID (2001), and then ensures the directory is group-writeable. If this is not the desired behaviour,
      # command used can be specified here.
      command:
  # -- Defines additional volumes that should be applied to all Jira pods.
  # Note that this will not create any corresponding volume mounts;
  # those needs to be defined in jira.additionalVolumeMounts
  additional:
    - name: server-xml-j2
      configMap:
        name: server-xml-j2
        defaultMode: 484
    - name: server-xml
      configMap:
        name: server-xml
        defaultMode: 484

# -- Standard Kubernetes node-selectors that will be applied to all Jira pods
nodeSelector: {}

# -- Standard Kubernetes tolerations that will be applied to all Jira pods
tolerations: []

# -- Standard Kubernetes affinities that will be applied to all Jira pods
affinity: {}

# -- Additional container definitions that will be added to all Jira pods
additionalContainers: []

# -- Additional initContainer definitions that will be added to all Jira pods
additionalInitContainers: []

# -- Additional labels that should be applied to all resources
additionalLabels: {}

# Big Bang Additions
proxyName: jira.bigbang.dev
hostname: bigbang.dev
istio:
  enabled: false
  gateways:
  - istio-system/main
monitoring:
  enabled: false
