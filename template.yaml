---
# Source: jira/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jira
  labels:
    helm.sh/chart: jira-0.1.0-bb.8
    app.kubernetes.io/name: jira
    app.kubernetes.io/instance: jira
    app.kubernetes.io/version: "8.18.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: jira/templates/config-jvm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: jira-jvm-config
  labels:
    helm.sh/chart: jira-0.1.0-bb.8
    app.kubernetes.io/name: jira
    app.kubernetes.io/instance: jira
    app.kubernetes.io/version: "8.18.1"
    app.kubernetes.io/managed-by: Helm
    
data:
  additional_jvm_args: >-
  max_heap: 1g
  min_heap: 1g
  reserved_code_cache: 512m
---
# Source: jira/templates/server-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: server-xml
data:
  server.xml: |
    <?xml version="1.0" encoding="utf-8"?>
  
    <!-- Note: this file is config mapped and not templated -->
  
    <Server port="8005"
            shutdown="SHUTDOWN">
  
      <Listener className="org.apache.catalina.startup.VersionLoggerListener"/>
      <Listener className="org.apache.catalina.core.AprLifecycleListener"
                SSLEngine="on"/>
      <Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener"/>
      <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener"/>
      <Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener"/>
  
      <Service name="Catalina">
  
        <Connector port="8080"
                   maxThreads="100"
                   minSpareThreads="10"
                   connectionTimeout="20000"
                   enableLookups="false"
                   protocol="HTTP/1.1"
                   redirectPort="8443"
                   acceptCount="10"
                   secure="true"
                   scheme="https"
                   proxyName="jira.bigbang.dev"
                   proxyPort="443"
  
                   relaxedPathChars="[]|"
                   relaxedQueryChars="[]|{}^\`&quot;&lt;&gt;"
                   bindOnInit="false"
                   maxHttpHeaderSize="8192"
                   useBodyEncodingForURI="true"
                   disableUploadTimeout="true" />
  
        <Connector port="8081"
                   maxThreads="100"
                   minSpareThreads="10"
                   connectionTimeout="20000"
                   enableLookups="false"
                   protocol="HTTP/1.1"
                   redirectPort="8443"
                   acceptCount="10"
  
                   relaxedPathChars="[]|"
                   relaxedQueryChars="[]|{}^\`&quot;&lt;&gt;"
                   bindOnInit="false"
                   maxHttpHeaderSize="8192"
                   useBodyEncodingForURI="true"
                   disableUploadTimeout="true" />
  
  
        <Engine name="Catalina"
                defaultHost="localhost">
  
          <Host name="localhost"
                appBase="webapps"
                unpackWARs="true"
                autoDeploy="true">
  
            <Context path=""
                     docBase="${catalina.home}/atlassian-jira"
                     reloadable="false"
                     useHttpOnly="true">
              <Resource name="UserTransaction"
                        auth="Container"
                        type="javax.transaction.UserTransaction"
                        factory="org.objectweb.jotm.UserTransactionFactory"
                        jotm.timeout="60"/>
              <Manager pathname=""/>
              <JarScanner scanManifest="false"/>
              <Valve className="org.apache.catalina.valves.StuckThreadDetectionValve"
                     threshold="120" />
            </Context>
  
          </Host>
          <Valve className="org.apache.catalina.valves.AccessLogValve"
                 pattern="%a %{jira.request.id}r %{jira.request.username}r %t &quot;%m %U%q %H&quot; %s %b %D &quot;%{Referer}i&quot; &quot;%{User-Agent}i&quot; &quot;%{jira.request.assession.id}r&quot;"/>
        </Engine>
  
      </Service>
    </Server>
---
# Source: jira/templates/server-j2-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: server-xml-j2
data:
  server.xml.j2: |
    <?xml version="1.0" encoding="utf-8"?>
  
    <Server port="{{ atl_tomcat_mgmt_port | default('8005') }}"
            shutdown="SHUTDOWN">
  
      <Listener className="org.apache.catalina.startup.VersionLoggerListener"/>
      <Listener className="org.apache.catalina.core.AprLifecycleListener"
                SSLEngine="on"/>
      <Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener"/>
      <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener"/>
      <Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener"/>
  
      <Service name="Catalina">
  
        <Connector port="{{ atl_tomcat_port | default('8080') }}"
                   maxThreads="{{ atl_tomcat_maxthreads | default('100') }}"
                   minSpareThreads="{{ atl_tomcat_minsparethreads | default('10') }}"
                   connectionTimeout="{{ atl_tomcat_connectiontimeout | default('20000') }}"
                   enableLookups="{{ atl_tomcat_enablelookups | default('false') }}"
                   protocol="{{ atl_tomcat_protocol | default('HTTP/1.1') }}"
                   redirectPort="{{ atl_tomcat_redirectport | default('8443') }}"
                   acceptCount="{{ atl_tomcat_acceptcount | default('10') }}"
                   secure="{{ atl_tomcat_secure | default(catalina_connector_secure) | default('false') }}"
                   scheme="{{ atl_tomcat_scheme | default(catalina_connector_scheme) | default('http') }}"
                   proxyName="{{ atl_proxy_name | default(catalina_connector_proxyname) | default('') }}"
                   proxyPort="{{ atl_proxy_port | default(catalina_connector_proxyport) | default('') }}"
  
                   relaxedPathChars="[]|"
                   relaxedQueryChars="[]|{}^\`&quot;&lt;&gt;"
                   bindOnInit="false"
                   maxHttpHeaderSize="{{ atl_tomcat_maxhttpheadersize | default('8192') }}"
                   useBodyEncodingForURI="true"
                   disableUploadTimeout="true" />
  
        <Connector port="8081"
                   maxThreads="100"
                   minSpareThreads="10"
                   connectionTimeout="20000"
                   enableLookups="false"
                   protocol="HTTP/1.1"
                   redirectPort="8443"
                   acceptCount="10"
  
                   relaxedPathChars="[]|"
                   relaxedQueryChars="[]|{}^\`&quot;&lt;&gt;"
                   bindOnInit="false"
                   maxHttpHeaderSize="8192"
                   useBodyEncodingForURI="true"
                   disableUploadTimeout="true" />
  
  
        <Engine name="Catalina"
                defaultHost="localhost">
  
          <Host name="localhost"
                appBase="webapps"
                unpackWARs="true"
                autoDeploy="true">
  
            <Context path="{{ atl_tomcat_contextpath | default(catalina_context_path) | default('') }}"
                     docBase="${catalina.home}/atlassian-jira"
                     reloadable="false"
                     useHttpOnly="true">
              <Resource name="UserTransaction"
                        auth="Container"
                        type="javax.transaction.UserTransaction"
                        factory="org.objectweb.jotm.UserTransactionFactory"
                        jotm.timeout="60"/>
              <Manager pathname=""/>
              <JarScanner scanManifest="false"/>
              <Valve className="org.apache.catalina.valves.StuckThreadDetectionValve"
                     threshold="120" />
            </Context>
  
          </Host>
          <Valve className="org.apache.catalina.valves.AccessLogValve"
                 pattern="%a %{jira.request.id}r %{jira.request.username}r %t &quot;%m %U%q %H&quot; %s %b %D &quot;%{Referer}i&quot; &quot;%{User-Agent}i&quot; &quot;%{jira.request.assessio
    n.id}r&quot;"/>
        </Engine>
  
      </Service>
    </Server>
---
# Source: jira/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: jira
  labels:
    helm.sh/chart: jira-0.1.0-bb.8
    app.kubernetes.io/name: jira
    app.kubernetes.io/instance: jira
    app.kubernetes.io/version: "8.18.1"
    app.kubernetes.io/managed-by: Helm
    
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    - port: 8081
      targetPort: 8081
      protocol: TCP
      name: http2
    - port: 40001
      targetPort: 40001
      protocol: TCP
      name: ehcache
    - port: 40011
      targetPort: 40011
      protocol: TCP
      name: ehcache-object
  selector:
    app.kubernetes.io/name: jira
    app.kubernetes.io/instance: jira
---
# Source: jira/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jira
  labels:
    helm.sh/chart: jira-0.1.0-bb.8
    app.kubernetes.io/name: jira
    app.kubernetes.io/instance: jira
    app.kubernetes.io/version: "8.18.1"
    app.kubernetes.io/managed-by: Helm
    
spec:
  replicas: 1
  serviceName: jira
  selector:
    matchLabels:
      app.kubernetes.io/name: jira
      app.kubernetes.io/instance: jira
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jira
        app.kubernetes.io/instance: jira
    spec:
      serviceAccountName: jira
      terminationGracePeriodSeconds: 1
      imagePullSecrets:
        - name: private-registry
      securityContext:
        # This is intended to ensure that the shared-home volume is group-writeable by the GID used by the Jira container.
        # However, this doesn't appear to work for NFS volumes due to a K8s bug: https://github.com/kubernetes/examples/issues/260
        fsGroup: 2001
      containers:
        - name: jira
          image: "registry1.dso.mil/ironbank/atlassian/jira-data-center/jira-node:8.18.1"
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh","-c","rm -rf /var/atlassian/application-data/jira/dbconfig.xml /var/atlassian/application-data/jira/.jira-home.lock /var/atlassian/application-data/jira/cluster.properties /var/atlassian/application-data/jira/dbconfig.xml /var/atlassian/application-data/jira/log /var/atlassian/application-data/jira/plugins /var/atlassian/application-data/jira/.java "]
          securityContext:
            runAsUser: 2001
            runAsGroup: 2001
          env:
            
            - name: ATL_TOMCAT_SCHEME
              value: "https"
            - name: ATL_TOMCAT_SECURE
              value: "true"
              
            
            
            - name: ATL_DB_DRIVER
              value: "org.postgresql.Driver"
            
            
            
            
            
            - name: JIRA_SHARED_HOME
              value: "/var/atlassian/application-data/shared-home"
            - name: JVM_SUPPORT_RECOMMENDED_ARGS
              valueFrom:
                configMapKeyRef:
                  key: additional_jvm_args
                  name: jira-jvm-config
            - name: JVM_MINIMUM_MEMORY
              valueFrom:
                configMapKeyRef:
                  key: min_heap
                  name: jira-jvm-config
            - name: JVM_MAXIMUM_MEMORY
              valueFrom:
                configMapKeyRef:
                  key: max_heap
                  name: jira-jvm-config
            - name: JVM_RESERVED_CODE_CACHE_SIZE
              valueFrom:
                configMapKeyRef:
                  key: reserved_code_cache
                  name: jira-jvm-config
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: http2
              containerPort: 8081
              protocol: TCP
            - name: ehcache
              containerPort: 40001
              protocol: TCP
            - name: ehcache-object
              containerPort: 40011
              protocol: TCP
          readinessProbe:
            httpGet:
              port: 8080
              path: /status
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 30
            successThreshold: 
          volumeMounts:
            - name: local-home
              mountPath: "/var/atlassian/application-data/jira"
            - name: shared-home
              mountPath: "/var/atlassian/application-data/shared-home"
            - mountPath: /opt/atlassian/etc/server.xml.j2
              name: server-xml-j2
              subPath: server.xml.j2
            - mountPath: /opt/atlassian/jira/conf/server.xml
              name: server-xml
              subPath: server.xml
            - mountPath: /opt/atlassian/jira/atlassian-jira/WEB-INF/classes/templates/plugins/footer/footer.vm
              name: footer-vm
              subPath: footer.vm
            
            
      volumes:
        
        
        
        - name: local-home
        
          emptyDir: {}
        - name: shared-home
        
          emptyDir: {}
        - configMap:
            defaultMode: 484
            name: server-xml-j2
          name: server-xml-j2
        - configMap:
            defaultMode: 484
            name: server-xml
          name: server-xml
---
# Source: jira/templates/test/test-application-status.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "jira-application-status-test"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
  labels:
    helm.sh/chart: jira-0.1.0-bb.8
    app.kubernetes.io/name: jira
    app.kubernetes.io/instance: jira
    app.kubernetes.io/version: "8.18.1"
    app.kubernetes.io/managed-by: Helm
    
spec:
  imagePullSecrets:
  - name: private-registry
  containers:
    - name: test
      image: registry1.dso.mil/ironbank/big-bang/base:8.4
      imagePullPolicy: IfNotPresent
      env:
        - name: STATUS_URL
          value: "http://jira:80/status"
      command:
        - /bin/sh
        - -ec
        - |
          STATUS=$(curl -s "$STATUS_URL")
          echo "Verifying application state is RUNNING or FIRST_RUN: $STATUS"
          echo $STATUS | jq -e '.state|test("RUNNING|FIRST_RUN")'
  restartPolicy: Never
---
# Source: jira/templates/test/test-shared-home-permissions.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "jira-shared-home-permissions-test"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
  labels:
    helm.sh/chart: jira-0.1.0-bb.8
    app.kubernetes.io/name: jira
    app.kubernetes.io/instance: jira
    app.kubernetes.io/version: "8.18.1"
    app.kubernetes.io/managed-by: Helm
    
spec:
  imagePullSecrets:
  - name: private-registry
  containers:
    - name: test
      image: registry1.dso.mil/ironbank/big-bang/base:8.4
      imagePullPolicy: IfNotPresent
      securityContext:
        # Slightly dodgy; we assume that the UID and GID used by the product images are the same, which in practice they are
        runAsUser: 2001
        runAsGroup: 2001
      volumeMounts:
        - name: shared-home
          mountPath: /shared-home
      command:
        - /bin/sh
        - -ec
        - |
          ls -ld /shared-home
          echo "Creating temporary file in shared home as user $(id -u):$(id -g)"
          touch /shared-home/permissions-test
          ls -l /shared-home/permissions-test
          rm /shared-home/permissions-test
  volumes:
    
    - name: shared-home
    
      emptyDir: {}
  restartPolicy: Never
